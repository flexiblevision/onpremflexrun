[pytest]
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*
norecursedirs = Arduino .git __pycache__ .pytest_cache htmlcov node_modules

# Output options
addopts =
    -v
    --tb=short
    --strict-markers
    --color=yes
    --cov=routes
    --cov=utils
    --cov-report=html
    --cov-report=term-missing
    --cov-report=xml
    --ignore=/root/Arduino
    --ignore=Arduino

# Markers for categorizing tests
markers =
    unit: Unit tests for individual functions/classes
    integration: Integration tests for API endpoints
    slow: Tests that take a long time to run
    network: Tests that require network access
    database: Tests that require database access
    auth: Tests that require authentication
    gpio: Tests for GPIO functionality
    docker: Tests that interact with Docker

# Logging
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Coverage options
[coverage:run]
omit =
    */tests/*
    */venv/*
    */__pycache__/*
    */site-packages/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    if TYPE_CHECKING:
    @abstractmethod
